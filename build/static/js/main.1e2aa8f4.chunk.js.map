{"version":3,"sources":["images/ath-msr7-black.jpg","images/ath-msr7-brown.jpg","images/iconmonstr-arrow-65.svg","hoc/aux.js","hoc/conditional.js","components/imageLoader.js","components/tabItem.js","components/selectInput.js","components/cartHandler.js","containers/headphone.js","containers/main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","aux","props","children","conditional","if","imageLoader","sName","spinnerType","sColour","spinnerColour","react_default","a","createElement","lib_default","src","imgSource","loading","dist_default","className","name","color","error","tabItem","esm","selectInput","styledselect","background","concat","selArrow","backgroundPosition","backgroundRepeat","clName","htmlFor","style","id","onChange","changed","selectOptions","map","list","key","value","cartHandler","onClick","click","headphone","state","image_src","Blackphone","cart","txt","viewcart","inputChangedHandler","ev","target","_this","setState","Brownphone","cartClickHandler","nstat","Object","objectSpread","loadding","setTimeout","Scroll","scrollToBottom","index_es","icon","components_selectInput","this","components_imageLoader","components_tabItem","components_cartHandler","hoc_conditional","Component","library","add","faArrowLeft","Main","hoc_aux","containers_headphone","App","containers_main","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1e2aa8f4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ath-msr7-black.eb57ad5c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ath-msr7-brown.cbde25c1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/iconmonstr-arrow-65.e2459d81.svg\";","const aux = (props) => props.children;\n\nexport default aux;","const conditional = (props) => {\n    return(\n      !!props.if && props.children\n    );\n  }\n  \nexport default conditional;","import React from 'react';\nimport ImageLoader from 'react-loading-image';\nimport Spinner from 'react-spinkit';\n\n/* Image loader to load image with spinner */\nconst imageLoader  = (props) => {\n   \n    let sName = props.spinnerType ? props.spinnerType : 'ball-clip-rotate-multiple';\n    let sColour = props.spinnerColour ?  props.spinnerColour : 'purple';\n    return(\n        <ImageLoader \n        src={props.imgSource}\n        loading={() => <Spinner className=\"ImgLoadSpinner\" name={sName} color={sColour}/>}\n        error={() => <div className=\"ImgLoadError\">Error</div>}\n        className=\"headphoneImage\"\n    />\n    )\n         \n}\n\n\n\nexport default imageLoader;\n\n","import React from 'react';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\n\n/* React built in tab componentw*/\nconst tabItem  = () => {\n   \n     return(\n\n        <Tabs>\n            <TabList>\n            <Tab>DESCRIPTION</Tab>\n            <Tab>DETAILS</Tab>\n            </TabList>\n            <TabPanel>\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\n            </TabPanel>\n            <TabPanel>\n            <p>Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem.</p>\n            </TabPanel>\n      </Tabs>\n    )\n         \n}\n\n\n\nexport default tabItem;\n","import React from 'react';\nimport selArrow from '../images/iconmonstr-arrow-65.svg'\n/* Function component to handle Select Dropdown List Render*/\nconst selectInput = (props) => {\n    let styledselect = { \n        background: `url(${selArrow})`,\n        backgroundPosition: 'right 10px center',\n        backgroundRepeat: 'no-repeat'\n        \n    }\n\n    function renderOptions(list,key) {\n        return (\n            <option key= {key} value={list}>{list}</option>\n        );\n    }\n\n    return(\n        <div>\n            <div className ={props.clName}>\n                <label className='label' htmlFor='colour'>\n                    Colors\n                </label>\n                <select className=\"styled-select\" style={ styledselect }id='sel-input-1' onChange={props.changed}>\n                    {props.selectOptions.map(renderOptions)}\n                </select>\n            </div>\n        </div>\n    )\n}\n\nexport default selectInput;","import React from 'react';\n\n/* cart Button Componenet*/\nconst cartHandler  = (props) => {\n   \n     return(\n             <button className=\"cartButton\" onClick={props.click}>{props.children}</button> \n    )\n         \n}\n\n\n\nexport default cartHandler;","import React, { Component } from 'react';\nimport Conditional from '../hoc/conditional'\nimport Blackphone from '../images/ath-msr7-black.jpg';\nimport Brownphone from '../images/ath-msr7-brown.jpg';\nimport ImageLoader from '../components/imageLoader'\nimport TabItem from '../components/tabItem'\nimport SelectItem from '../components/selectInput'\nimport CartHandler from '../components/cartHandler';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as Scroll from 'react-scroll';\n\n/* Headpohone Container  which pulls in all individual components*/\nclass headphone extends Component {\n  /* State object to determine the image load and Add to card status*/\n  state={\n    image_src:Blackphone,\n    cart:{txt:'Add to Cart',loading:false,viewcart:false}\n  \n  }\n/* Function to  handle select button and load appropriate Image */\n  inputChangedHandler =(ev)=>{\n    let ch = ev.target.value\n    ch === 'Black'? this.setState({image_src:Blackphone}):this.setState({image_src:Brownphone})\n  }\n\n/* Function to handle the cart button and change content accordingly*/\n  cartClickHandler = () => {\n    if(!this.state.cart.loading){\n       let nstat = {...this.state.cart}\n       nstat = {txt:'Loading....',loadding:true,viewcart:false}\n       this.setState({cart:nstat})\n      setTimeout(() => {\n        let nstat = {...this.state.cart}\n        nstat = {txt:'View Cart',loadding:true,viewcart:true}\n        this.setState({cart:nstat})\n        let scroll  = Scroll.animateScroll;\n        scroll.scrollToBottom();\n      }, 2000);\n    }\n  }\n\n  render() {\n   \n    return (\n      <div className='Container'>\n        <div className='top-container'>\n            <p className='backNav'><FontAwesomeIcon icon=\"arrow-left\" /> All products</p>\n            <h1>Audio-Technica ATH-MSR7</h1>\n            <p>2017 Best Headphone of the Year Award Winner</p>\n        </div>\n        <div className=\"img-container\">\n            <SelectItem clName=\"sel-item-mobile\"  selectOptions={['Black','Brown']} changed={this.inputChangedHandler}/>\n            <ImageLoader imgSource={this.state.image_src}/>\n        </div>\n        <div className=\"tab-container\">\n            <TabItem/>\n        </div>\n        <div className=\"dol-container\">\n            <p className='curVal'>$59.99</p><p><strike>$89.99</strike></p>\n        </div>\n        <div className=\"sel-container\">\n           <SelectItem clName=\"sel-item-desk\"  selectOptions={['Black','Brown']} changed={this.inputChangedHandler}/>\n        </div>\n        <div className=\"cart-container\">\n            <CartHandler click={this.cartClickHandler} >{this.state.cart.txt}</CartHandler>\n            <Conditional if={this.state.cart.viewcart}>\n              <p className='chOutText'>Item added to cart!</p>  \n            </Conditional>\n           \n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default headphone;","import React, { Component } from 'react';\nimport '../scss/main.scss';\n/* Aux import is an higher order component used for wrapping.*/\nimport Aux from '../hoc/aux'\nimport Headphone from './headphone'\n/* FontAwsome Library for Back arrow*/\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faArrowLeft  } from '@fortawesome/free-solid-svg-icons'\nlibrary.add(faArrowLeft)\n\n/* Main Class which loads in the Headphone Container*/\nclass Main extends Component {\n  render() {\n    return (\n      <Aux>\n          <Headphone/>\n      </Aux>\n    );\n  }\n}\n\nexport default Main;","import React, { Component } from 'react';\nimport Main from '../src/containers/main';\n\nclass App extends Component {\n  render() {\n    return (\n      <Main/>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}